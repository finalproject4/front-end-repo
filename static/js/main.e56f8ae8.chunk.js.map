{"version":3,"sources":["image/IMG_1094.png","apiConfig.js","services/AuthService.js","components/Nav.js","components/authForm.js/SigninForm.js","components/authForm.js/SignupForm.js","components/ToolForm.js","components/authForm.js/ChangePasswordForm.js","components/Profile.js","components/Home.js","components/EditToolsForm.js","components/myTools.js","components/myres.js","components/EditProfileForm.js","components/myHalls.js","components/HallForm.js","components/EditHallsForm.js","components/Reservations.js","components/HReservations.js","components/Home2.js","landig.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","apiUrls","apiUrl","window","location","hostname","setUser","user","localStorage","setItem","JSON","stringify","delete_cookie","name","document","cookie","getUser","getItem","console","log","parse","moment","require","AuthenticatedOptions","state","myTools","myHalls","myReservations","toolsR","hallsR","getHalls","url","concat","id","fetch","mode","credentials","method","then","response","json","data","_this","setState","Halls","catch","e","getTools","Tools","getReservationsH","hreservations","getReservationsT","reservations","this","_this2","total","length","react_default","a","createElement","Fragment","className","onClick","props","changeActivePage","onSignout","format","React","Component","Nav","_ref","src","image","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","alwaysOptions","Nav_AuthenticatedOptions","unauthenticatedOptions","SigninForm","formData","email","password","err","handleLoginRequest","headers","Content-type","body","res","status","message","onSignin","handleSubmit","preventDefault","handleChange","currentTarget","Object","objectSpread","value","onSubmit","onChange","SignupForm","first_name","last_name","phone_number","password_confirmation","ToolForm","quantity","price","tool","Content-Type","reload","ChangePasswordForm","old","new","passwords","Profile","my_profile","changeActiveToEditP","EditToolsForm","event","MyTools","tools","removeTool","copytools","splice","delete","re","changeCart","map","changeActiveToEdit","MyRes","reservationsC","hreservationsC","handleResRequest","handleClientResRequest","filterdData","filter","handleClientHResRequest","hall","handleResHRequest","r","ree","date","split","section","size","reservation","EditProfileForm","MyHalls","halls","removeHall","copyhalls","changeActiveToEditH","HallForm","EditHallsForm","Reservations","activeToolId","check","Date","handleChangeDate","getRes","toolID","dateArray","ourDate","input1","dbDate","includes","swal","title","text","icon","button","handleReserveRequest","handleToolsRequest","updateButton","action","HReservations","getResH","hallID","input","undefined","handleReserveHRequest","handleHallsRequest","Home","components_Reservations","components_HReservations","Landing","activeSlideIndex","slides","slidesInterval","setInterval","nextSlide","n","clearInterval","class","App","activePage","currentTool","currentHall","currentUser","cart","cartId","removeItem","_this$state","components_Nav","mmm","Home2","authForm_js_SigninForm","authForm_js_SignupForm","authForm_js_ChangePasswordForm","components_ToolForm","components_HallForm","components_EditToolsForm","components_EditHallsForm","myres","components_Profile","components_EditProfileForm","landig","Boolean","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e56f8ae8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_1094.7fd11b1a.png\";","let apiUrl;\nconst apiUrls = {\n  production: \"https://cryptic-forest-78079.herokuapp.com/\",\n  development: \"http://localhost:3001\"\n};\n\nif (window.location.hostname === \"localhost\") {\n  apiUrl = apiUrls.development;\n} else {\n  apiUrl = apiUrls.production;\n}\n\nexport default apiUrl;\n","export function setUser(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n}\n\nconst delete_cookie = function(name) {\n  document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n};\n\nexport function getUser() {\n  const user = localStorage.getItem(\"user\");\n  console.log(user)\n  return user === \"undefined\" ? null : JSON.parse(user);\n}\n\nexport function Signout() {\n  document.cookie = \"jwt= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n  delete_cookie(\"jwt\");\n  localStorage.removeItem(\"user\");\n}\n","import React from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nimport image from \"./../image/IMG_1094.png\";\nvar moment = require('moment')\n\nclass AuthenticatedOptions extends React.Component {\n  state = {\n    myTools: [],\n    myHalls: [],\n    myReservations: [],\n    toolsR: [],\n    hallsR: [],\n  }\n\n  getHalls = () => {\n    let url = `${apiUrl}/api/user/${getUser().id}/halls`;\n      console.log(getUser().id, \"test\")\n      fetch(url, {\n        mode: \"cors\",\n        credentials: \"include\",\n        method: \"GET\",\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          this.setState({ myHalls: data.user.Halls })\n        })\n  \n        .catch(e => console.log(e));\n    };\n\n    getTools = () => {\n      let url = `${apiUrl}/api/user/${getUser().id}/tools`;\n      console.log(getUser().id)\n      fetch(url, {\n        mode: \"cors\",\n        credentials: \"include\",\n        method: \"GET\",\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          this.setState({ myTools: data.user.Tools })\n  \n        })\n  \n        .catch(e => console.log(e));\n  \n        \n    }\n    getReservationsH = () => {\n      let url = `${apiUrl}/api/user/${getUser().id}/hres`;\n\n      fetch(url, {\n          mode: \"cors\",\n          credentials: \"include\",\n          method: \"GET\",\n      })\n      .then(response => response.json())\n      .then(data => {\n      console.log(data, \"hallssss\")\n      this.setState({ hallsR: data.user.hreservations })\n      })\n\n      .catch(e => console.log(e));\n  };\n\n    \n    getReservationsT = () => {\n      let url = `${apiUrl}/api/user/${getUser().id}/res`;\n\n      fetch(url, {\n          mode: \"cors\",\n          credentials: \"include\",\n          method: \"GET\",\n      })\n      .then(response => response.json())\n      .then(data => {\n      console.log(data, \"res\")\n          this.setState({ toolsR: data.user.reservations })\n      })\n\n      .catch(e => console.log(e));\n  };\n  \n  componentDidMount(){\n    this.getTools();\n    this.getHalls();\n     this.getReservationsT();\n    this.getReservationsH();\n\n}\n  render(){\n    const tool = this.state.toolsR.length \n    const hall = this.state.hallsR.length \n    const total = tool + hall\n    console.log(this.state.toolsR, \"dd\")\n    return (\n     \n      <React.Fragment>\n      <li\n        className=\"nav-item\"\n        onClick={() => this.props.changeActivePage(\"change-password\")}\n      >\n        <div className=\"nav-link\">Change Password</div>\n      </li>\n      <li className=\"nav-item\" onClick={() => this.props.onSignout()}>\n        <div className=\"nav-link\">Sign Out</div>\n      </li>\n      <li\n        className=\"nav-item\"\n        onClick={() => this.props.changeActivePage(\"Add-Tool\")}\n      >\n        <div className=\"nav-link\">Add Tool</div>\n      </li>\n      <li\n        className=\"nav-item\"\n        onClick={() => this.props.changeActivePage(\"my-tools\")}\n      >\n        <div className=\"nav-link\">My Tools ({this.state.myTools.length})</div>\n        {/* <div className=\"nav-link\">{this.props.changeCart}</div> */}\n      </li>\n      <li\n        className=\"nav-item\"\n        onClick={() => this.props.changeActivePage(\"add-Hall\")}\n      >\n        <div className=\"nav-link\">Add Hall</div>\n      </li>\n    \n      <li\n        className=\"nav-item\"\n        onClick={() => this.props.changeActivePage(\"my-halls\")}\n      >\n        <div className=\"nav-link\">My Halls ({this.state.myHalls.length})</div>\n      </li>\n      <li\n        className=\"nav-item\"\n        onClick={() => this.props.changeActivePage(\"my-res\")}\n      >\n        <div className=\"nav-link\">My Reservations ({total})</div>\n      </li>\n       \n        \n        <li className=\"nav-item\" onClick={() => this.props.changeActivePage(\"profile\")} >\n        <div className=\"nav-link\">Profile</div>\n      </li>\n      <p className=\"time\">{moment().format('h:mm A ')}</p>\n      <p className=\"date\">{moment().format('MM-DD')  }</p>\n      \n    </React.Fragment>\n    )\n  }\n}\n\n\nconst unauthenticatedOptions = changeActivePage => (\n  <React.Fragment>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"sign-in\")}>\n      <div className=\"nav-link\">Sign In</div>\n    </li>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"sign-up\")}>\n      <div className=\"nav-link\">Sign Up</div>\n    </li>\n  </React.Fragment>\n);\n\nconst alwaysOptions = changeActivePage => (\n  <React.Fragment>\n    <li className=\"nav-item\" onClick={() => changeActivePage(\"home\")}>\n      <div className=\"nav-link\">Home</div>\n    </li>\n  </React.Fragment>\n);\n\nconst Nav = ({ user, changeActivePage, onSignout }) => (\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n    <div className=\"navbar-brand\"></div>\n<nav className=\"navbar navbar-light bg-light\">\n    <img src={image} width=\"180\" height=\"70\" className=\"d inline-block align-top\" alt=\"img\"/>\n</nav>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\" />\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        {alwaysOptions(changeActivePage)}\n\n        {user\n          ? < AuthenticatedOptions changeActivePage={changeActivePage} onSignout={onSignout} />\n          : unauthenticatedOptions(changeActivePage)}\n        {/* {user && (\n          <li className=\"nav-item\">\n            <div className=\"nav-link\"> Hola, {user.email.split(\"@\")[0]}</div>\n          </li>\n        )} */}\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../../apiConfig\";\nimport { setUser } from \"../../services/AuthService\";\nclass SigninForm extends Component {\n  state = {\n    formData: {\n      email: null,\n      password: null\n    },\n    err: null\n  };\n\n  handleLoginRequest = user => {\n    let url = `${apiUrl}/sign-in`;\n\n    console.log(url);\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 200) this.setState({ err: data.message });\n        else {\n          this.setState({ err: null });\n          setUser(data);\n          this.props.onSignin();\n        }\n      })\n      .catch(e => console.log(e));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleLoginRequest(this.state.formData);\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"pt-5 mt-5\">\n        <h1 className=\"mb-5\" >SIGIN IN</h1>\n        {this.state.err ? (\n          <div className=\"alert alert-danger\"> {this.state.err} </div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Email </label>\n            <input\n              name=\"email\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n            <label>Password</label>\n            <input\n              name=\"password\"\n              className=\"form-control\"\n              type=\"password\"\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n          </div>\n\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SigninForm;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../../apiConfig\";\nimport { setUser } from \"../../services/AuthService\";\nclass SignupForm extends Component {\n  state = {\n    formData: {\n      first_name: null,\n      last_name: null,\n      phone_number: null,\n      email: null,\n      password: null,\n      password_confirmation: null\n    },\n    err: null\n  };\n\n  handleLoginRequest = user => {\n    let url = `${apiUrl}/sign-up`;\n\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ credentials: user })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status > 299) \n          this.setState({ err: data.message});\n        else {\n          setUser(data);\n          this.props.onSignin();\n        }\n      })\n      .catch(e => console.log(e));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleLoginRequest(this.state.formData);\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"pt-5 mt-5\">\n        <h1 className=\"mb-5\"> JOIN US! </h1>\n        {this.state.err ? (\n          <div className=\"alert alert-warning\"> {this.state.err} </div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>First Name </label>\n            <input\n              name=\"first_name\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n\n            <label>Last Name </label>\n            <input\n              name=\"last_name\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n\n            <label>Phone Number </label>\n            <input\n              name=\"phone_number\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n           \n\n            <label>Email </label>\n            <input\n              name=\"email\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n            <label>Password</label>\n            <input\n              name=\"password\"\n              className=\"form-control\"\n              type=\"password\"\n              onChange={this.handleChange}\n            />\n\n            <label>Password Confirmation</label>\n            <input\n              name=\"password_confirmation\"\n              className=\"form-control\"\n              type=\"password\"\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n          </div>\n\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nclass ToolForm extends Component {\n    state = {\n        formData: {\n            type: null,\n            quantity: null,\n            price:null,\n            \n        },\n        err: null\n    };\n\n    handleLoginRequest = tool => {\n        let url = `${apiUrl}/api/user/${getUser().id}/tools`;\n        console.log(getUser().id);\n\n        console.log(url);\n        fetch(url, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify( tool )\n        })\n            .then(res => res.json())\n            .then(data => {\n                // this.props.changeActivePage(\"home\");\n                window.location.reload()\n            })\n            .catch(e => console.log(e));\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        this.handleLoginRequest(this.state.formData);\n    };\n\n    handleChange = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n    };\n\n    render() {\n        return (\n            <div className=\"pt-5 mt-5\">\n                <h1>Tool</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Type</label>\n                        <input\n                            name=\"type\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Quantity </label>\n                        <input\n                            name=\"quantity\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Price </label>\n                        <input\n                            name=\"price\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                          <button type=\"submit\" className=\"btn btn-primary\">\n                            Add\n                             </button>\n                    </div>\n\n                  \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ToolForm;","import React, { Component } from \"react\";\nimport apiUrl from \"../../apiConfig\";\nimport { getUser } from \"../../services/AuthService\";\nclass ChangePasswordForm extends Component {\n  state = {\n    formData: {\n      old: null,\n      new: null\n    },\n    err: null\n  };\n\n  handleLoginRequest = passwords => {\n    let url = `${apiUrl}/change-password`;\n\n    console.log({ email: getUser().email, passwords });\n    console.log(url);\n    fetch(url, {\n      method: \"PATCH\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ email: getUser().email, passwords })\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.props.changeActivePage(\"home\");\n      })\n      .catch(e => console.log(e));\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.handleLoginRequest(this.state.formData);\n  };\n\n  handleChange = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n  };\n\n  render() {\n    return (\n      <div className=\"pt-5 mt-5\">\n        <h1>Change Password</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Old Password</label>\n            <input\n              name=\"old\"\n              className=\"form-control\"\n              type=\"password\"\n              onChange={this.handleChange}\n            />\n            <label>new Password </label>\n            <input\n              name=\"new\"\n              type=\"password\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n          </div>\n\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ChangePasswordForm;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\n\nclass Profile extends Component {\nstate = {\n    my_profile: {}\n}\n// const Profile = () => <div>Profile</div>;\n\nhandleLoginRequest = user => {\n    let url = `${apiUrl}/api/user/${getUser().id}`;\n    \n    fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then(response => response.json())\n    .then(user => {\n        console.log(user.user)\n\n        this.setState({ my_profile: user.user })\n        \n        }).catch(e => console.log(e));\n \n\n  };\n \n\n  componentDidMount() {\n    this.handleLoginRequest();\n  }\nrender() {\nreturn (\n  \n<div className=\"d-flex justify-content-center\">\n    \n      <div className=\"profile\">\n        <img src=\"http://romanroadtrust.co.uk/wp-content/uploads/2018/01/profile-icon-png-898-300x300.png\" className=\"profile-img\"  />\n          <div className=\"p-body\">\n          <h6>Hello {this.state.my_profile.first_name}</h6>\n          <p>Name: {this.state.my_profile.first_name} {this.state.my_profile.last_name} </p>\n           <p>Email: {this.state.my_profile.email} </p>\n           <p>Phone Number: {this.state.my_profile.phone_number} </p>\n           <button onClick={() => this.props.changeActiveToEditP(\"Edit-profile\", this.state.my_profile.id)} className=\"btn btn-primary\">Edit</button>\n       </div>\n       </div>           \n    </div> \n)}\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport '../App.css';\nimport { getUser } from \"../services/AuthService\";\nimport swal from 'sweetalert';\nclass Home extends Component {\n    \n  state = {\n      user: null,\n    tools: [],\n    reservations: [],\n    hreservations: [],\n    res: \"btn btn-primary\",\n    activeToolId: [],\n    halls: [],\n    check: \"\",\n    formData: {\n    date: new Date()\n    }\n   \n  }\n\n\n  handleChangeDate = ({ currentTarget }) => {\n    const formData = { ...this.state.formData };\n    formData[currentTarget.name] = currentTarget.value;\n    this.setState({ formData });\n    console.log(this.state.formData)\n  };\n\n  updateButton = (id) => {\n    const activeToolId = [...this.state.activeToolId]\n    const index = this.state.activeToolId.indexOf(id)\n    if (index > -1 ){\n      activeToolId.splice(index , 1)\n    } else { \n      activeToolId.push(id)\n    }\n\n    this.setState({ activeToolId })\n  }\n\n  getRes = ( toolID ) => {\n      const user = getUser()\n      if (user !== null){\n    \n    let url = `${apiUrl}/api/tool/${toolID}`;\n\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"GET\",\n    })\n      .then(response => response.json())\n      \n      .then(data => {\n        console.log(data ,\"ddd\")\n          const input = data.user.Reservations\n          const dateArray = input.map(e => {\n             return e.date.split('T')[0]\n          })\n          console.log(dateArray, \"input\")\n        //   const dateArray = input.split('T');\n        //   const userMonth = parseInt(dateArray[1])-1;\n          const ourDate = dateArray[0]\n     \n\n          const input1 = this.state.formData.date\n          console.log(input1,\"11111\")\n          const dateArray1 = input1.split('T');\n        //   const userMonth1 = parseInt(dateArray1[1])-1;\n          const dbDate = dateArray1[0];\n          console.log('dbDate: ', dbDate, ' ourDate: ', ourDate , dateArray[0]);\n        if(!dateArray.includes(dbDate) ){\n            this.handleReserveRequest(toolID)\n            swal({\n                title: \"Reserved! \",\n                text: \"\",\n                icon: \"success\",\n                button: \"Back\",\n              });\n        } else {\n            swal({\n                title: \"Oops ! This date has been reserved \",\n                text: \"Please, choose another date\",\n                icon: \"warning\",\n                button: \"Back\",\n              });\n            }\n         this.setState({ reservations: data.tools })\n      })\n\n      .catch(e => console.log(e));\n    }\n     else {\n        swal({\n            title: \"Do you have account ?\",\n            text: \"Sign Up for free!\",\n            icon: \"warning\",\n            button: \"Back\",\n          });\n  \n  };\n}\n\ngetResH = ( hallID ) => {\n    const user = getUser()\n    if (user !== null){\n  \n  let url = `${apiUrl}/api/hall/${hallID}`;\n\n  fetch(url, {\n    mode: \"cors\",\n    credentials: \"include\",\n    method: \"GET\",\n  })\n    .then(response => response.json())\n    \n    .then(data => {\n    \n      const input = data.hall.Hreservations\n      console.log(data)\n      if (input === undefined){\n        this.handleReserveHRequest(hallID)\n        swal({\n            title: \"Reserved! \",\n            text: \"\",\n            icon: \"success\",\n            button: \"Back\",\n          });\n      } else {\n        const dateArray = input.map(e => {\n            return e.date.split('T')[0]\n        })\n        console.log(dateArray, \"input\")\n        //   const dateArray = input.split('T');\n        //   const userMonth = parseInt(dateArray[1])-1;\n        const ourDate = dateArray[0]\n    \n\n        const input1 = this.state.formData.date\n        console.log(input1,\"11111\")\n        const dateArray1 = input1.split('T');\n        //   const userMonth1 = parseInt(dateArray1[1])-1;\n        const dbDate = dateArray1[0];\n        if(!dateArray.includes(dbDate) ){\n            this.handleReserveHRequest(hallID)\n            swal({\n                title: \"Reserved! \",\n                text: \"\",\n                icon: \"success\",\n                button: \"Back\",\n              });\n        } else {\n            swal({\n                title: \"Oops ! This date has been reserved \",\n                text: \"Please, choose another date\",\n                icon: \"warning\",\n                button: \"Back\",\n              });\n        }\n      }\n      this.setState({ hreservations: data.halls })\n    })\n\n    .catch(e => console.log(e));\n  }\n   else {\n      swal({\n          title: \"Do you have account ?\",\n          text: \"Sign Up for free!\",\n          icon: \"warning\",\n          button: \"Back\",\n        });\n\n};\n}\n\n\n\nhandleLoginRequest = () => {\n  let url = `${apiUrl}/api/tools`;\n\n  fetch(url, {\n    mode: \"cors\",\n    credentials: \"include\",\n    method: \"GET\",\n  })\n    .then(response => response.json())\n    .then(data => {\n      // console.log(data)\n      this.setState({ tools: data.tools })\n    })\n\n    .catch(e => console.log(e));\n};\nhandleHallsRequest = () => {\n  let url = `${apiUrl}/api/halls`;\n\n  fetch(url, {\n    mode: \"cors\",\n    credentials: \"include\",\n    method: \"GET\",\n  })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data, \"halls\")\n      this.setState({ halls: data.halls })\n    })\n\n    .catch(e => console.log(e));\n};\n\ncomponentDidMount() {\n   this.handleLoginRequest();\n   this.handleHallsRequest();\n\n}\n\nhandleReserveRequest = (toolID) => {\n  \n  console.log(\"tool = \" ,toolID )\n\n  \n    let url = `${apiUrl}/api/user/${getUser().id}/tool/${toolID}`;\n\n    console.log(getUser().id);\n\n    console.log(url);\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ tools: data.tools })\n      })\n\n      .catch(e => console.log(e));\n  // this.updateButton()\n  };\nhandleReserveHRequest = (hallID) => {\n  console.log(\"hall = \" ,hallID )\n\n  \n    let url = `${apiUrl}/api/user/${getUser().id}/hall/${hallID}`;\n    console.log(getUser().id);\n\n    console.log(url);\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(this.state.formData)\n\n    })\n      .then(res => res.json())\n\n      .catch(e => console.log(e));\n  };\n  componentWillMount(){\n    this.handleHallsRequest();\n\n  }\n  render() {\n     \n    \n    const tools = this.state.tools.map(tools => {\n      return (\n        <div className=\"card\">\n          <img src=\"https://cdn2.iconfinder.com/data/icons/bar-and-pub-flaticon/64/music-party-food_and_restaurant-disc-tools-musical-tool-512.png\" className=\"card-img-top\" alt=\"...\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{tools.type}</h5>\n            <p className=\"card-text\">Quantity: {tools.quantity}</p>\n            <p className=\"card-text\">Price: {tools.price}</p>\n\n            <form action=\"/action_page.php\">\n            date:\n            <input type=\"date\" name=\"date\" onChange={this.handleChangeDate}/>\n            </form>\n\n            {/* <button className={this.state.activeToolId.indexOf(tools.id) > -1 ?  \"newR\": this.state.res} onClick={(e) => this.handleReserveRequest(tools.id)}> Reserve</button> */}\n         <button className=\"btn btn-primary\" onClick={ () =>this.getRes(tools.id)}> Reserve</button>\n          </div>\n        </div>\n      );\n    });\n    \n  const halls = this.state.halls.map(halls => {\n    return (\n      <div className=\"card\">\n        <img src=\"https://imagesawe.s3.amazonaws.com/listing/2019/01/31/al_faisaliah_hotel_1.jpg\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{halls.name}</h5>\n          <p className=\"card-text\">Location: {halls.location}</p>\n          <p className=\"card-text\">Price: {halls.price}</p>\n          <p className=\"card-text\">Type: {halls.type}</p>\n          <p className=\"card-text\">Section: {halls.section}</p>\n          <p className=\"card-text\">Size: {halls.size}</p>\n          <form action=\"/action_page.php\">\n          Date:\n          <input type=\"date\" name=\"date\" onChange={this.handleChangeDate}/>\n          </form>\n          <button className=\"btn btn-primary\" onClick={(e) => this.getResH(halls.id)}>Reserve </button>\n        </div>\n      </div>\n    );\n  });\n  // () => this.handleReserveRequest(tools.id)\n  return (\n  <div>\n  <div className=\"card-group\">{tools}</div>\n  <div className=\"card-group\">{halls}</div>\n  </div>\n  )\n}\n\n\n}\n\n\nexport default Home;\n\n\n\n\n\n  \n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nclass EditToolsForm extends Component {\n    state = {\n        formData: {\n            type: null,\n            quantity: null,\n            price:null,\n            \n        },\n        err: null\n    };\n    componentDidMount(){\n        let url = `${apiUrl}/api/tool/${this.props.id}`;\n    \n          fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({formData: data.tool})\n          })\n          .catch(e => console.log(e));\n        };\n    \n    handleChange = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n      };\n     handleSubmit = (event) => {\n            event.preventDefault();\n          let url = `${apiUrl}/api/tool/${this.props.id}`;\n          console.log(url)\n          console.log(this.state.formData)\n            fetch(url, {\n              mode: \"cors\",\n              credentials: \"include\",\n              method: \"PUT\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({tool: this.state.formData})\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                \n                this.props.changeActivePage('my-tools');\n                console.log(this.props.changeActivePage,\"ss\")\n            })\n            .catch(e => console.log(e));\n          };\n    \n        \n    \n\n    render() {\n        return (\n            <div className=\"pt-5 mt-5\">\n                <h1>Tool</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Type</label>\n                        <input\n                            name=\"type\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={this.state.formData.type}\n                            onChange={this.handleChange}\n                        />\n                        <label>Quantity </label>\n                        <input\n                            name=\"quantity\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.formData.quantity}\n                            onChange={this.handleChange}\n                        />\n                        <label>Price </label>\n                        <input\n                            name=\"price\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.formData.price}\n                            onChange={this.handleChange}\n                        />\n                        <button className=\"btn btn-primary\">\n                        Update\n                    </button>\n                    </div>\n\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EditToolsForm;","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nimport EditToolsForm from \"./EditToolsForm\";\n\nclass MyTools extends Component {\n\n  state = {\n    tools: []\n  }\n  \n \n  removeTool = id => {\n    const copytools = this.state.tools.splice(id, 1);\n    //updat state\n    this.setState({\n      tools: copytools\n    })\n  }\n  delete = (id) => {\n\n\n    let url = `${apiUrl}/api/tool/${id}`;\n\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"DELETE\",\n    })\n      .then(response => response.json())\n\n      .then(data => {\n        console.log(data)\n\n        this.props.changeActivePage('Home');\n        this.props.changeActivePage('my-tools');\n        console.log(this.props.changeActivePage, \"ss\")\n\n       this.removeTool();\n      })\n      .catch(e => console.log(e));\n  };\n\n\n  // edit = () => {\n  //   this.props.changeActiveToEdit(\"Edit-Tool\");\n\n  // }\n\n  handleLoginRequest = () => {\n    let url = `${apiUrl}/api/user/${getUser().id}/tools`;\n    console.log(getUser().id)\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"GET\",\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ tools: data.user.Tools })\n\n      })\n\n      .catch(e => console.log(e));\n  };\n  re = () => {\n   console.log(this.state.tools.length, \"tools.length\")\n   this.props.changeCart(this.state.tools.length)\n    // this.props.changeCart(this.state.tools.length)\n\n   }\n \n\n  componentDidMount() {\n    this.handleLoginRequest();\n   \n  }\n\n  render() {\n    // this.props.changeCart(this.state.tools.length)\n    const tools = this.state.tools.map(tool => {\n      return (\n        <div className=\"col-sm-4\">\n        <div className=\"card\">\n          <img src=\"https://static.tildacdn.com/tild3166-6166-4965-b466-396633616232/AllEquipmentHire1e1459197308294.jpg\" className=\"card-img-top\" alt=\"...\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{tool.type}</h5>\n            <p className=\"card-text\">Quantity: {tool.quantity}</p>\n            <p className=\"card-text\">Price: {tool.price}</p>\n            <button onClick={() => this.props.changeActiveToEdit(\"Edit-Tool\", tool.id)} className=\"btn btn-primary\">Edit</button>\n            <button onClick={() => this.delete(tool.id)} className=\"btn btn-primary\">Delete</button>\n          </div>\n        </div>\n        </div>\n      );\n    });\n    return <div className=\"row mt-5\">{tools}</div>;\n\n\n\n  }\n\n\n}\n\n\nexport default MyTools;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\n\nclass MyRes extends Component {\n    state = {\n        reservations: [],\n        reservationsC: [],\n        hreservations: [],\n        hreservationsC: []\n    }\n\n    delete = (id) => {\n        console.log(id)\n    }\n    handleResRequest = () => {\n        let url = `${apiUrl}/api/user/${getUser().id}/resd`;\n        fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.user, \"details\")\n                this.setState({ reservations: data.user })\n            })\n\n            .catch(e => console.log(e));\n    };\n    handleClientResRequest = () => {\n        let url = `${apiUrl}/api/user/${getUser().id}/cres`;\n        fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n        })\n            .then(response => response.json())\n            \n            .then(data => {\n                console.log(data.user, \"resC\")\n                const filterdData = data.user.filter(tool => {\n                    if(tool.reservations.length !== 0) {\n                        return tool\n                    }\n                })\n                this.setState({ reservationsC: filterdData })\n            })\n\n            .catch(e => console.log(e));\n    };\n    handleClientHResRequest = () => {\n        let url = `${apiUrl}/api/user/${getUser().id}/cresh`;\n        fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.user, \"resC\")\n                const filterdData = data.user.filter(hall => {\n                    if(hall.hreservations.length !== 0) {\n                        return hall\n                    }\n                })\n                this.setState({ hreservationsC: filterdData })\n            })\n\n            .catch(e => console.log(e));\n    };\n\n    handleResHRequest = () => {\n        let url = `${apiUrl}/api/user/${getUser().id}/hresd`;\n        console.log(getUser().id)\n        fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                this.setState({ hreservations: data.user })\n            })\n\n            .catch(e => console.log(e));\n    };\n\n    componentDidMount() {\n        this.handleResRequest();\n        this.handleClientResRequest();\n        this.handleResHRequest();\n        this.handleClientHResRequest();\n    }\n\n    render() {\n        const hreservationsC = this.state.hreservationsC.map(r => {\n            const res = r.hreservations.map(re => {\n                const ree = re.date.split('T')[0]\n                return <li>{ree}</li>\n            })\n           return (\n            <div className=\"mt-4\">\n            <h4>Client Hall Reservation</h4>\n            <div className=\"col-sm-4 card m-3\">\n                <img src=\"https://imagesawe.s3.amazonaws.com/listing/2019/01/31/al_faisaliah_hotel_1.jpg\" className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                <h5 className=\"card-title\">{r.name}</h5>\n                <p className=\"card-text\">Location: {r.location}</p>\n                <p className=\"card-text\">Price: {r.price}</p>\n                <p className=\"card-text\">Type: {r.type}</p>\n                <p className=\"card-text\">Section: {r.section}</p>\n                <p className=\"card-text\">Size: {r.size}</p>\n                <p className=\"card-text\">Date: {res}</p>\n\n            </div>\n            </div>\n            </div>\n           \n        )})\n        const reservationsC = this.state.reservationsC.map(r => {\n            const res = r.reservations.map(re => {\n                const ree = re.date.split('T')[0]\n                return <li>{ree}</li>\n            })\n           return (\n                  <div className=\"col-sm-4 mt-4\">\n                <h4>Client Tool Reservation</h4>\n                <div className=\"card m-3\">\n                <img src=\"https://static.tildacdn.com/tild3166-6166-4965-b466-396633616232/AllEquipmentHire1e1459197308294.jpg\" className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{r.type}</h5>\n                    <p className=\"card-text\">Price: {r.price}</p>\n                    <p className=\"card-text\">Date: {res}</p>\n                </div>\n                </div>\n                </div>\n               \n           )\n        })\n        const reservations = this.state.reservations.map(reservation => {\n            \n            const date = reservation.reservations.map(date => {\n                return <li>{date.date.split('T')[0]}</li>\n            })\n            return (\n                <div className=\"col-sm-4 mt-4\">\n                <h4>Your Tool Reservation</h4>\n                <div className=\"card m-3\">\n                <img src=\"https://static.tildacdn.com/tild3166-6166-4965-b466-396633616232/AllEquipmentHire1e1459197308294.jpg\" className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{reservation.type}</h5>\n                    <p className=\"card-text\">Price: {reservation.price}</p>\n                    <p className=\"card-text\">Date: {date}</p>\n                </div>\n                </div>\n                </div>\n                \n            );\n        }); \n        const hreservations = this.state.hreservations.map(hreservations => {\n            const date = hreservations.hreservations.map(date => {\n                return <li>{date.date.split('T')[0]}</li>\n            })\n            return (\n                <div className=\"col-sm-4 mt-4\">\n                <h4>Your Hall Reservation</h4>\n                <div className=\"card m-3\">\n                    <img src=\"https://imagesawe.s3.amazonaws.com/listing/2019/01/31/al_faisaliah_hotel_1.jpg\" className=\"card-img-top\" alt=\"...\" />\n                    <div className=\"card-body\">\n                    <h5 className=\"card-title\">{hreservations.name}</h5>\n                    <p className=\"card-text\">Location: {hreservations.location}</p>\n                    <p className=\"card-text\">Price: {hreservations.price}</p>\n                    <p className=\"card-text\">Type: {hreservations.type}</p>\n                    <p className=\"card-text\">Section: {hreservations.section}</p>\n                    <p className=\"card-text\">Size: {hreservations.size}</p>\n                    <p className=\"card-text\">Size: {date}</p>\n\n                </div>\n                </div>\n                </div>\n          \n            );\n        }); \n        return <div className=\"row\">\n        \n        {reservations}\n        {hreservations}\n        {reservationsC}\n        {hreservationsC}\n        </div>;\n\n\n    }\n\n\n}\n\n\nexport default MyRes;","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nclass EditProfileForm extends Component {\n    state = {\n        formData: {\n            first_name: null,\n            last_name: null,\n            email: null,\n            phone_number: null\n            \n        },\n        err: null\n    };\n    componentDidMount(){\n        let url = `${apiUrl}/api/user/${getUser().id}`;\n            fetch(url, {\n              mode: \"cors\",\n              credentials: \"include\",\n              method: \"GET\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data, \"profile\")\n                this.setState({formData: data.user})\n            })\n            .catch(e => console.log(e));\n    }\n    handleChange = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n      };\n     handleSubmit = (event) => {\n            event.preventDefault();\n          let url = `${apiUrl}/api/user/${getUser().id}`;\n          console.log(url)\n          console.log(this.state.formData)\n            fetch(url, {\n              mode: \"cors\",\n              credentials: \"include\",\n              method: \"PUT\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({user: this.state.formData})\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                \n                this.props.changeActivePage('profile');\n                console.log(this.props.changeActivePage,\"ss\")\n            })\n            .catch(e => console.log(e));\n          };\n    \n        \n    \n\n    render() {\n        return (\n            <div className=\"pt-5 mt-5\">\n                        <h1>Profile</h1>\n\n                    <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>First Name </label>\n                        <input\n                            name=\"first_name\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={this.state.formData.first_name}\n                            onChange={this.handleChange}\n                        />\n                        <label>Last Name </label>\n                        <input\n                         name=\"last_name\"\n                         type=\"text\"\n                         value={this.state.formData.last_name}\n                         className=\"form-control\"\n                         onChange={this.handleChange}\n                        />\n        <label>Email </label>\n        <input\n            name=\"email\"\n            type=\"text\"\n            className=\"form-control\"\n            value={this.state.formData.email}\n            onChange={this.handleChange}\n        />\n        <label>Phone Number </label>\n        <input\n            name=\"phone_number\"\n            type=\"text\"\n            className=\"form-control\"\n            value={this.state.formData.phone_number}\n            onChange={this.handleChange}\n        />\n            <button className=\"btn btn-primary\">\n                        Update\n                    </button>\n            </div>\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EditProfileForm;","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\n\n\n\nclass MyHalls extends Component {\n  state = {\n    halls: []\n  }\n\n  re = () => {\n    window.location.reload();\n  }\n\n  removeHall = id => {\n    const copyhalls = this.state.halls.splice(id, 1);\n    //updat state\n    this.setState({\n      halls: copyhalls\n    })\n  }\n  delete = (id) => {\n\n\n    let url = `${apiUrl}/api/hall/${id}`;\n\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"DELETE\",\n    })\n      .then(response => response.json())\n\n      .then(data => {\n        console.log(data)\n\n        this.props.changeActivePage('Home');\n        this.props.changeActivePage('my-halls');\n        console.log(this.props.changeActivePage, \"ss\")\n\n       this.removeTool();\n      })\n      .catch(e => console.log(e));\n  };\n\n\n  // edit = () => {\n  //   this.props.changeActiveToEdit(\"Edit-Tool\");\n\n  // }\n\n  handleLoginRequest = () => {\n    let url = `${apiUrl}/api/user/${getUser().id}/halls`;\n    console.log(getUser().id, \"test\")\n    fetch(url, {\n      mode: \"cors\",\n      credentials: \"include\",\n      method: \"GET\",\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setState({ halls: data.user.Halls })\n      })\n\n      .catch(e => console.log(e));\n  };\n\n  componentDidMount() {\n    this.handleLoginRequest();\n  }\n\n  render() {\n    console.log(this.state.halls.length)\n    const halls = this.state.halls.map(hall => {\n      return (\n        <div className=\"col-sm-4\">\n        <div className=\"card\">\n          <img src=\"https://imagesawe.s3.amazonaws.com/listing/2019/01/31/al_faisaliah_hotel_1.jpg\" className=\"card-img-top\" alt=\"...\" />\n          <div className=\"card-body\">\n            <p className=\"card-title\">{hall.name}</p>\n            <p className=\"card-text\">Location: {hall.location}</p>\n            <p className=\"card-text\">Price: {hall.price}</p>\n            <p className=\"card-text\">Type: {hall.type}</p>\n            <p className=\"card-text\">Section: {hall.section}</p>\n            <p className=\"card-text\">Size: {hall.size}</p>\n            <button onClick={() => this.props.changeActiveToEditH(\"Edit-Hall\", hall.id)} className=\"btn btn-primary\">Edit</button>\n            <button onClick={() => this.delete(hall.id)} className=\"btn btn-primary\">Delete</button>\n          </div>\n        </div>\n        </div>\n      );\n    });\n    return <div className=\"row\">{halls}</div>;\n\n\n\n  }\n\n\n}\n\n\nexport default MyHalls;\n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nclass HallForm extends Component {\n    state = {\n        formData: {\n            type: null,\n            section: null,\n            price:null,\n            location: null,\n            size: null,\n            name: null\n            \n        },\n        err: null\n    };\n\n    handleLoginRequest = hall => {\n        let url = `${apiUrl}/api/user/${getUser().id}/halls`;\n        console.log(getUser().id);\n\n        console.log(url);\n        fetch(url, {\n            method: \"POST\",\n            mode: \"cors\",\n            credentials: \"include\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify( hall )\n        })\n            .then(res => res.json())\n            .then(data => {\n                // this.props.changeActivePage(\"home\");\n                window.location.reload()\n            })\n            .catch(e => console.log(e));\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        this.handleLoginRequest(this.state.formData);\n    };\n\n    handleChange = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n    };\n\n    render() {\n        return (\n            <div className=\"pt-5 mt-5\">\n                <h1>Hall</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input\n                            name=\"name\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Type</label>\n                        <input\n                            name=\"type\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Location </label>\n                        <input\n                            name=\"location\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Price </label>\n                        <input\n                            name=\"price\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Size </label>\n                        <input\n                            name=\"size\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                        <label>Section </label>\n                        <input\n                            name=\"section\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                         <button type=\"submit\" className=\"btn btn-primary\">\n                            Add\n                         </button>\n                    </div>\n\n                   \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default HallForm;","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport { getUser } from \"../services/AuthService\";\nclass EditHallsForm extends Component {\n    state = {\n        formData: {\n            type: null,\n            section: null,\n            price:null,\n            location: null,\n            size: null,\n            name: null\n        },\n        err: null\n    };\n    componentDidMount(){\n        let url = `${apiUrl}/api/hall/${this.props.id}`;\n            fetch(url, {\n              mode: \"cors\",\n              credentials: \"include\",\n              method: \"GET\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n            })\n            .then(response => response.json())\n            .then(data => {\n               this.setState({formData: data.hall}) \n            })\n            .catch(e => console.log(e));\n    }\n    handleChange = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n      };\n     handleSubmit = (event) => {\n            event.preventDefault();\n          let url = `${apiUrl}/api/hall/${this.props.id}`;\n          console.log(url)\n          console.log(this.state.formData)\n            fetch(url, {\n              mode: \"cors\",\n              credentials: \"include\",\n              method: \"PUT\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({hall: this.state.formData})\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                \n                this.props.changeActivePage('my-halls');\n                console.log(this.props.changeActivePage,\"ss\")\n            })\n            .catch(e => console.log(e));\n          };\n    \n        \n    \n\n    render() {\n        return (\n            <div className=\"pt-5 mt-5\">\n                <h1>Hall</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input\n                            name=\"name\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={this.state.formData.name}\n                            onChange={this.handleChange}\n                        />\n                        <label>Type</label>\n                        <input\n                            name=\"type\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={this.state.formData.type}\n                            onChange={this.handleChange}\n                        />\n                        <label>Location </label>\n                        <input\n                            name=\"location\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.formData.location}\n                            onChange={this.handleChange}\n                        />\n                        <label>Price </label>\n                        <input\n                            name=\"price\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.formData.price}\n                            onChange={this.handleChange}\n                        />\n                        <label>Size </label>\n                        <input\n                            name=\"size\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.formData.size}\n                            onChange={this.handleChange}\n                        />\n                        <label>Section </label>\n                        <input\n                            name=\"section\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.formData.section}\n                            onChange={this.handleChange}\n                        />\n                        <button className=\"btn btn-primary\">\n                            Update\n                            </button>\n                    </div>\n\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default EditHallsForm;","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport '../App.css';\nimport { getUser } from \"../services/AuthService\";\nimport swal from 'sweetalert';\nclass Reservations extends Component {\n    \n    state = {\n        user: null,\n        tools: [],\n        reservations: [],\n        res: \"btn btn-primary\",\n        activeToolId: [],\n        check: \"\",\n        formData: {\n            date: new Date()\n        }\n    \n    }\n\n\n    handleChangeDate = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n        console.log(this.state.formData)\n    };\n\n    getRes = ( toolID ) => {\n        const user = getUser()\n        if (user !== null){\n    \n            let url = `${apiUrl}/api/tool/${toolID}`;\n\n            fetch(url, {\n                mode: \"cors\",\n                credentials: \"include\",\n                method: \"GET\",\n            })\n            .then(response => response.json())\n            \n            .then(data => {\n                console.log(data ,\"ddd\")\n                const input = data.tool.reservations\n                const dateArray = input.map(e => {\n                    return e.date.split('T')[0]\n                })\n                console.log(dateArray, \"input\")\n                //   const dateArray = input.split('T');\n                //   const userMonth = parseInt(dateArray[1])-1;\n                const ourDate = dateArray[0]\n            \n\n                const input1 = this.state.formData.date\n                console.log(input1,\"11111\")\n                const dateArray1 = input1.split('T');\n                //   const userMonth1 = parseInt(dateArray1[1])-1;\n                const dbDate = dateArray1[0];\n                console.log('dbDate: ', dbDate, ' ourDate: ', ourDate , dateArray[0]);\n                if(!dateArray.includes(dbDate) ){\n                    this.handleReserveRequest(toolID)\n                    swal({\n                        title: \"Reserved! \",\n                        text: \"\",\n                        icon: \"success\",\n                        button: \"Back\",\n                    });\n                } else {\n                    swal({\n                        title: \"Oops ! This date has been reserved \",\n                        text: \"Please, choose another date\",\n                        icon: \"warning\",\n                        button: \"Back\",\n                    });\n                    }\n                this.setState({ reservations: data.tools })\n            })\n\n            .catch(e => console.log(e));\n        } else {\n            swal({\n                title: \"Do you have account ?\",\n                text: \"Sign Up for free!\",\n                icon: \"warning\",\n                button: \"Back\",\n            });\n        \n        };\n    }\n\n\n    handleToolsRequest = () => {\n        let url = `${apiUrl}/api/tools`;\n\n        fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n        })\n        .then(response => response.json())\n        .then(data => {\n        // console.log(data)\n            this.setState({ tools: data.tools })\n        })\n\n        .catch(e => console.log(e));\n    };\n    componentDidMount() {\n        this.handleToolsRequest();\n\n    }\n\n    handleReserveRequest = (toolID) => {\n    \n        console.log(\"tool = \" ,toolID )\n\n    \n        let url = `${apiUrl}/api/user/${getUser().id}/tool/${toolID}`;\n\n        console.log(getUser().id);\n\n        console.log(url);\n        fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.formData)\n        })\n        .then(res => res.json())\n        .then(data => this.updateButton(toolID))\n        \n        .catch(e => console.log(e));\n        // this.updateButton()\n    };\n\n    render() {\n        console.log(this.state.tools.length , \";ll\")\n        \n        const tools = this.state.tools.map(tools => {\n            return (\n                <div className=\"col-sm-4\">\n                <div className=\"card m-3\">\n                <img src=\"https://static.tildacdn.com/tild3166-6166-4965-b466-396633616232/AllEquipmentHire1e1459197308294.jpg\" className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{tools.type}</h5>\n                    <p className=\"card-text\">Quantity: {tools.quantity}</p>\n                    <p className=\"card-text\">Price: {tools.price}</p>\n\n                    <form action=\"/action_page.php\">\n                    <input type=\"date\" name=\"date\" onChange={this.handleChangeDate}/>\n                    </form>\n\n                    {/* <button className={this.state.activeToolId.indexOf(tools.id) > -1 ?  \"newR\": this.state.res} onClick={(e) => this.handleReserveRequest(tools.id)}> Reserve</button> */}\n                <button className=\"btn btn-primary\" onClick={ () =>this.getRes(tools.id)}> Reserve</button>\n                </div>\n                </div>\n                </div>\n            );\n        });\n        return (\n            <div className=\"row\">{tools}</div>\n        )\n    }\n\n\n}\n\n\nexport default Reservations;\n\n\n\n\n\n  \n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport '../App.css';\nimport { getUser } from \"../services/AuthService\";\nimport swal from 'sweetalert';\nclass HReservations extends Component {\n    \n    state = {\n        user: null,\n        hreservations: [],\n        res: \"btn btn-primary\",\n        halls: [],\n        formData: {\n            date: new Date()\n        }\n\n    }\n\n    handleChangeDate = ({ currentTarget }) => {\n        const formData = { ...this.state.formData };\n        formData[currentTarget.name] = currentTarget.value;\n        this.setState({ formData });\n        console.log(this.state.formData)\n    };\n\n\n    getResH = ( hallID ) => {\n        const user = getUser()\n        if (user !== null){\n\n            let url = `${apiUrl}/api/hall/${hallID}`;\n\n            fetch(url, {\n                mode: \"cors\",\n                credentials: \"include\",\n                method: \"GET\",\n            })\n            .then(response => response.json())\n            \n            .then(data => {\n            \n            const input = data.hall.hreservations\n            console.log(data)\n            if (input === undefined){\n                this.handleReserveHRequest(hallID)\n                swal({\n                    title: \"Reserved! \",\n                    text: \"\",\n                    icon: \"success\",\n                    button: \"Back\",\n                });\n            } else {\n                const dateArray = input.map(e => {\n                    return e.date.split('T')[0]\n                })\n                console.log(dateArray, \"input\")\n                //   const dateArray = input.split('T');\n                //   const userMonth = parseInt(dateArray[1])-1;\n                const ourDate = dateArray[0]\n            \n\n                const input1 = this.state.formData.date\n                console.log(input1,\"11111\")\n                const dateArray1 = input1.split('T');\n                //   const userMonth1 = parseInt(dateArray1[1])-1;\n                const dbDate = dateArray1[0];\n                if(!dateArray.includes(dbDate) ){\n                    this.handleReserveHRequest(hallID)\n                    swal({\n                        title: \"Reserved! \",\n                        text: \"\",\n                        icon: \"success\",\n                        button: \"Back\",\n                    });\n                } else {\n                    swal({\n                        title: \"Oops ! This date has been reserved \",\n                        text: \"Please, choose another date\",\n                        icon: \"warning\",\n                        button: \"Back\",\n                    });\n                }\n            }\n                this.setState({ hreservations: data.halls })\n            })\n\n            .catch(e => console.log(e));\n        } else {\n            swal({\n                title: \"Do you have account ?\",\n                text: \"Sign Up for free!\",\n                icon: \"warning\",\n                button: \"Back\",\n                });\n\n        };\n    }\n\n    handleHallsRequest = () => {\n        let url = `${apiUrl}/api/halls`;\n\n        fetch(url, {\n            mode: \"cors\",\n            credentials: \"include\",\n            method: \"GET\",\n        })\n        .then(response => response.json())\n        .then(data => {\n        console.log(data, \"halls\")\n        this.setState({ halls: data.halls })\n        })\n\n        .catch(e => console.log(e));\n    };\n\n    componentDidMount() {\n        this.handleHallsRequest();\n\n    }\n\n    handleReserveHRequest = (hallID) => {\n        console.log(\"hall = \" ,hallID )\n\n\n        let url = `${apiUrl}/api/user/${getUser().id}/hall/${hallID}`;\n        console.log(getUser().id);\n\n        console.log(url);\n        fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.formData)\n\n        })\n        .then(res => res.json())\n\n        .catch(e => console.log(e));\n    };\n    componentWillMount(){\n        this.handleHallsRequest();\n\n    }\n    render() {\n        const halls = this.state.halls.map(halls => {\n            return (\n                <div className=\"col-sm-4\">\n                <div className=\"card m-3\">\n                    <img src=\"https://imagesawe.s3.amazonaws.com/listing/2019/01/31/al_faisaliah_hotel_1.jpg\" className=\"card-img-top\" alt=\"...\" />\n                    <div className=\"card-body\">\n                    <h5 className=\"card-title\">{halls.name}</h5>\n                    <p className=\"card-text\">Location: {halls.location}</p>\n                    <p className=\"card-text\">Price: {halls.price}</p>\n                    <p className=\"card-text\">Type: {halls.type}</p>\n                    <p className=\"card-text\">Section: {halls.section}</p>\n                    <p className=\"card-text\">Size: {halls.size}</p>\n                    <form action=\"/action_page.php\">\n                    <input type=\"date\" name=\"date\" onChange={this.handleChangeDate}/>\n                    </form>\n                    <button className=\"btn btn-primary\" onClick={(e) => this.getResH(halls.id)}>Reserve </button>\n                    </div>\n                </div>\n                </div>\n            );\n        });\n        return (\n                <div className=\"row\">{halls}</div>\n        )\n    }\n\n\n}\n\n\nexport default HReservations;\n\n\n\n\n\n  \n","import React, { Component } from \"react\";\nimport apiUrl from \"../apiConfig\";\nimport '../App.css';\nimport { getUser } from \"../services/AuthService\";\nimport swal from 'sweetalert';\nimport Reservations from './Reservations';\nimport HReservations from './HReservations';\n\nclass Home extends Component {\n    \n    state = {\n    }\n    render() {\n     \n        return (\n            <div className=\"container mt-5\">\n                <Reservations />\n                <HReservations />\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default Home;\n\n\n\n\n\n  \n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Landing extends Component {\n\n \n\n       state = {\n    activeSlideIndex: 0\n}\n  \n    slides = [\n        \"https://www.fourseasons.com/content/dam/fourseasons/images/web/RIY/RIY_191_aspect16x9.jpg/jcr:content/renditions/cq5dam.web.468.263.jpeg\",\n        \"https://imagesawe.s3.amazonaws.com/listing/2019/01/31/the_ritz_carlton_hotel.jpg\",\n        \"http://isct2018.com/wp-content/uploads/2016/07/windsor-banquet-hall-montreal-versailles-ballroom-french-renaissance-decor-wedding-honour-table-blue-lighting-1024x680.jpg\",\n        \"https://www.traditionslighting.com/wp-content/uploads/2017/03/magical-wedding-lighting-ideas-02_detail.jpg\"\n    ] \n\n    slidesInterval = setInterval(() => {\n        this.nextSlide(\"+\")\n    } , 2000)\n\n    nextSlide = (n) => {\n\n        let activeSlideIndex; \n\n        if(n === \"+\") {\n            activeSlideIndex = this.state.activeSlideIndex + 1; \n            if (activeSlideIndex  < this.slides.length ){\n                this.setState({ activeSlideIndex })\n            } else {\n                this.setState({ activeSlideIndex: 0 })\n            }\n        } else if (n === \"-\") {\n            activeSlideIndex = this.state.activeSlideIndex - 1;\n            if (activeSlideIndex > -1) {\n                this.setState({ activeSlideIndex })\n            } else {\n                this.setState({ activeSlideIndex: this.slides.length -1  })\n            }\n        }\n\n    }\n\n   componentWillUnmount(){\n       clearInterval(this.slidesInterval)\n   }\n\n    render() {\n        return (\n            <div className=\"notuse\">\n                <img class=\"mySlides\" id=\"c\" src={this.slides[this.state.activeSlideIndex]}/>\n           \n                <p className=\"paragraph\">   لا تشيل هم <span>مناسبتك!</span> رتبها معنا </p>\n\n                <small className=\"s\"> &copy; All the way from Sharqiyah with Saja , 2019</small>\n        </div> )\n    }\n}\nexport default Landing;\n","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\nimport { getUser, Signout } from \"./services/AuthService\";\nimport SigninForm from \"./components/authForm.js/SigninForm\";\nimport SignupForm from \"./components/authForm.js/SignupForm\";\nimport ToolForm from \"./components/ToolForm\";\nimport ChangePasswordForm from \"./components/authForm.js/ChangePasswordForm\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport MyTools from \"./components/myTools\";\nimport MyRes from \"./components/myres\";\nimport EditToolsForm from \"./components/EditToolsForm\";\nimport EditProfileForm from \"./components/EditProfileForm\";\nimport './App.css';\nimport MyHalls from \"./components/myHalls\";\nimport HallForm from \"./components/HallForm\";\nimport EditHallsForm from \"./components/EditHallsForm\";\nimport apiUrl from \"./apiConfig\";\nimport Home2 from \"./components/Home2\";\nimport Landing from \"./landig\";\nvar moment = require('moment')\n\n\n\n\nclass App extends Component {\n  state = {\n    user: null,\n    activePage: \"Landing\",\n    currentTool: null,\n    currentHall: null,\n    currentUser: null,\n    cart: null,\n    tools: []\n  };\n\n  \n\n  changeActiveToEdit = (activePage, id) => {\n    this.setState({ activePage: activePage, currentTool: id });\n\n  }\n  changeActiveToEditH = (activePage, id) => {\n    this.setState({ activePage: activePage, currentHall: id });\n\n  }\n  changeActiveToEditP = (activePage, id) => {\n    this.setState({ activePage: activePage, currentUser: id });\n\n  }\n  changeCart = (cartId) => {\n    this.setState({cart: cartId})\n  }\n  componentDidMount() {\n    // check if we have a token in the local storage\n    const user = getUser();\n    if (user) {\n      this.setState({ user });\n    }\n  }\n\n  changeActivePage = activePage => {\n    this.setState({ activePage });\n  };\n  onSignin = () => {\n    this.setState({ user: getUser() });\n    this.changeActivePage(\"home\");\n  };\n  onSignout = () => {\n    console.log(\"sigin out\");\n    this.setState({ user: null });\n    this.changeActivePage(\"landing\");\n    Signout();\n  };\n\n  render() {\n    console.log(this.state.tools.length, \"API\")\n\n    console.log(this.state.cart, \"from the app\")\n\n    const { user, activePage } = this.state;\n    return (\n      <div>\n\n        \n        <Nav\n          user={user}\n          changeActivePage={this.changeActivePage}\n          onSignout={this.onSignout}\n          mmm={this.state.tools.length}\n        />\n\n        <div className=\"container\">\n          {activePage === \"home\" ? <Home2 /> : \"\"}\n          {activePage === \"sign-in\" ? (\n            <SigninForm onSignin={this.onSignin} />\n          ) : (\n              \"\"\n            )}\n          {activePage === \"sign-up\" ? (\n            <SignupForm onSignin={this.onSignin} />\n          ) : (\n              \"\"\n            )}\n          {activePage === \"change-password\" ? (\n            <ChangePasswordForm changeActivePage={this.changeActivePage} />\n          ) : (\n              \"\"\n            )}\n          {activePage === \"Add-Tool\" ? (\n            <ToolForm changeActivePage={this.changeActivePage} />\n          ) : (\n              \"\"\n            )}\n            {activePage === \"add-Hall\" ? (\n              <HallForm changeActivePage={this.changeActivePage} />\n            ) : (\n                \"\"\n              )}       \n                 {activePage === \"Edit-Tool\" ? (\n            <EditToolsForm changeActivePage={this.changeActivePage} id={this.state.currentTool} />\n          ) : (\n              \"\"\n            )}\n          {activePage === \"my-tools\" ? (\n            <MyTools changeActivePage={this.changeActivePage} changeActiveToEdit={this.changeActiveToEdit} changeCart={this.changeCart} cartId={this.state.cart}/>\n          ) : (\n              \"\"\n          )}\n          {activePage === \"my-halls\" ? (\n            <MyHalls changeActivePage={this.changeActivePage} changeActiveToEditH={this.changeActiveToEditH} />\n          ) : (\n              \"\"\n          )}\n          {activePage === \"Edit-Hall\" ? (\n            <EditHallsForm changeActivePage={this.changeActivePage} id={this.state.currentHall} changeActiveToEditH={this.changeActiveToEditH} />\n          ) : (\n              \"\"\n          )}\n          {activePage === \"my-res\" ? (\n            <MyRes changeActivePage={this.changeActivePage} />\n          ) : (\n              \"\"\n          )}\n            \n          \n          {activePage === \"profile\" ? (\n          <Profile changeActivePage={this.changeActivePage} changeActiveToEditP={this.changeActiveToEditP} />\n           ) :( \n             \"\" \n             )}\n               {activePage === \"Edit-profile\" ? (\n            <EditProfileForm changeActivePage={this.changeActivePage} id={this.state.currentUser} />\n          ) : (\n              \"\"\n            )}\n          {activePage === \"Landing\" ? (\n          <Landing changeActivePage={this.changeActivePage}/>\n             ) : (\n           \"\"\n         )}\n        </div>\n                {/* <h1 className=\"time\">{moment().format('h:mm A ')}</h1>\n                <h1 className=\"date\">{moment().format('MM-DD')  }</h1> */}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/jquery/dist/jquery\";\nimport \"../node_modules/popper.js/dist/popper\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}